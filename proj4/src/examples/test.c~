#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <syscall.h>

#define SAMPLE_TEXT "This is the sample text file for read-boundary test.\n"
#define SAMPLE_SIZE (sizeof SAMPLE_TEXT)

// Align close to page boundary
#define PAGE_SIZE 4096

int
main (void)
{
  int handle;
  int byte_cnt;

  // Allocate memory near the top of a page, like get_boundary_area()
  char *page = (char *) malloc (PAGE_SIZE);
  if (!page) {
    printf("Failed to allocate memory\n");
    return -1;
  }

  // Place buffer so it straddles the boundary
  char *buffer = page + PAGE_SIZE - SAMPLE_SIZE / 2;

  // Open test file
  handle = open ("sample.txt");
  if (handle <= 1) {
    printf("Failed to open file\n");
    return -1;
  }

  byte_cnt = read (handle, buffer, SAMPLE_SIZE - 1);
  if (byte_cnt != SAMPLE_SIZE - 1) {
    printf ("read() returned %d instead of %zu\n", byte_cnt, SAMPLE_SIZE - 1);
    return -1;
  }

  if (strncmp (SAMPLE_TEXT, buffer, SAMPLE_SIZE - 1)) {
    printf ("expected text:\n%s\n", SAMPLE_TEXT);
    printf ("text actually read:\n%s\n", buffer);
    printf ("Text mismatch!\n");
    return -1;
  }

  printf ("read_boundary_simple: passed\n");
  return 0;
}
